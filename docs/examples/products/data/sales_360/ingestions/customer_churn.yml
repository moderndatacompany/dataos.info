version: v1
name: wf-customer-churn-ingestion
type: workflow
tags:
  - demo.customer
  - Tier.Gold
  - Domain.Sales
description: This workflow is responsible for ingesting customer  for analysis and insights from Bigquery into Lakehouse.
workflow:
  title: customer Ingestion Workflow
  dag:
    - name: customer-ingestion
      description: This workflow is responsible for ingesting customer  for analysis and insights from Bigquery into Lakehouse.
      title: customer Ingestion Workflow
      spec:
        tags:
          - demo.customer
        stack: flare:4.0
        compute: runnable-default
        stackSpec:
          driver:
            coreLimit: 1200m
            cores: 1
            memory: 1024m
          executor:
            coreLimit: 1200m
            cores: 1
            instances: 1
            memory: 1024m
          job:
            explain: true
            inputs:
              - name: transactions_input
                dataset: dataos://bigquery:sales_360/transaction_data?acl=rw

              - name: customer_input
                dataset: dataos://lakehouse:sales_360/customer?acl=rw
                format: Iceberg

            logLevel: INFO
            outputs:
              - name: customer_final_dataset
                dataset: dataos://lakehouse:sales_360/customer_churn?acl=rw
                format: Iceberg
                description: The customer table is a structured dataset that contains comprehensive information about various customer within the organization. It serves as a central repository for customer data, facilitating efficient management, analysis, and decision-making processes related to customer operations, logistics, and customer engagement.
                tags:
                   - demo.customer
                options:
                  saveMode: overwrite
                  iceberg:
                    properties:
                      write.format.default: parquet
                      write.metadata.compression-codec: gzip
                title: customer set Ingestion
            steps:
              - sequence:
                  - name: customer_final_dataset
                    sql: |
                      WITH customer_activity AS (
                        SELECT
                            c.customer_id,
                            MAX(t.transaction_date) AS last_transaction_date
                        FROM
                            customer_input c
                        LEFT JOIN
                            transactions_input t ON cast(c.customer_id as string) = t.customer_id
                        GROUP BY
                            c.customer_id
                        )

                        SELECT
                            CASE
                                WHEN last_transaction_date < DATE_SUB(CURRENT_DATE, 90) THEN 'Churned'
                                ELSE 'Not Churned'
                            END AS churn_status,
                            COUNT(*) AS customer_count
                        FROM
                            customer_activity
                        GROUP BY
                            CASE
                                WHEN last_transaction_date < DATE_SUB(CURRENT_DATE, 90) THEN 'Churned'
                                ELSE 'Not Churned'
                            END
                    functions:
                      - name: cleanse_column_names
                      - name: change_column_case
                        case: lower
