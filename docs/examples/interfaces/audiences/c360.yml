name: "c360"
contract: "data_mapper"
description: "Data Model to answer any questions around a customer."
owner: "The Modern Data Company"
tags:
- "c360"
- "activity_schema"
- "segment"
entities:
- name: "customer"
  sql:
    query: "SELECT * FROM icebase.audience.customers_large_data"
    columns:
    - name: "customer_id"
    - name: "customer_name"
    - name: "email"
    - name: "phone_number"
    - name: "address"
    - name: "state"
    - name: "county_name"
    - name: "zip"
    tables:
    - "icebase.audience.customers_large_data_01"
  fields:
  - name: "customer_id"
    description: "unique identifier of the customer"
    tags:
    - "customer_identifier"
    type: "string"
    column: "customer_id"
    primary: true
  - name: "customer_name"
    description: "Business name the customer operates under"
    tags:
    - "name_identifier"
    type: "string"
    column: "customer_name"
    primary: false
  - name: "email"
    description: "email address of the customer"
    tags:
    - "email_identifier"
    type: "string"
    column: "email"
  - name: "phone_number"
    description: "contact number of the customer"
    tags:
    - "phone_identifier"
    type: "string"
    column: "phone_number"
  - name: "address"
    description: "postal address of the customer"
    tags:
    - "address_identifier"
    type: "string"
    column: "address"
  - name: "state"
    description: "state code where the customer physical address is located"
    type: "string"
    column: "state"
  - name: "county_name"
    description: "name of the county"
    type: "string"
    column: "county_name"
  - name: "zip"
    description: "ZIP code associate with the customer physical address"
    type: "string"
    column: "zip"
  measures:
  - name: "count_customers"
    description: "count of total customers"
    tags:
    - "total_customers"
    type: "count"
    sql_snippet: "${customer.customer_id}"
  - name: "percentage_email"
    description: "percentage customers with email"
    tags:
    - "email_reachability"
    type: "number"
    sql_snippet: "round(100*count(${customer.email})/cast(count(*) as double),2)"
  relationships:
  - type: "1:N"
    field: "customer_id"
    target:
      name: "order_placed"
      field: "entity_id"
  - type: "1:N"
    field: "customer_id"
    target:
      name: "order_rejected"
      field: "entity_id"
  - type: "1:N"
    field: "customer_id"
    target:
      name: "order_invoiced"
      field: "entity_id"
- name: "order_placed"
  sql:
    query: "SELECT \n  activity_uuid, \n  entity_id,\n  trim(feature1) as order_id,\n\
      \  activity_ts,\n  trim(feature2) as product_id,\n  trim(feature3) as brand_name,\n\
      \  trim(feature4) as supplier_name,\n  trim(feature5) as product_category,\n  cast(feature9 as double)\
      \ as order_value,\n  feature10 as request_delivery_date\nFROM icebase.audience.activity_streams_large_data\
      \ where activity = 'order_placed'\n"
    columns:
    - name: "activity_uuid"
    - name: "entity_id"
    - name: "activity_ts"
    - name: "order_id"
    - name: "product_id"
    - name: "supplier_name"
    - name: "product_category"
    - name: "order_value"
    - name: "request_delivery_date"
    tables:
    - "icebase.audience.activity_streams_large_data"
  fields:
  - name: "activity_uuid"
    description: "unique identifier of the activity event"
    type: "string"
    column: "activity_uuid"
    primary: true
  - name: "entity_id"
    description: "customer identifier"
    type: "string"
    column: "entity_id"
  - name: "order_id"
    description: "order identifier"
    type: "string"
    column: "order_id"
  - name: "activity_ts"
    description: "timestamp of the moment when activity_occured"
    type: "date"
    column: "activity_ts"
  - name: "product_id"
    description: "product identifier"
    type: "string"
    column: "product_id"
  - name: "order_value"
    description: "value of the order placed"
    type: "number"
    column: "order_value"
  - name: "request_delivery_date"
    description: "requested delivery date"
    type: "date"
    column: "request_delivery_date"
  - name: "supplier_name"
    description: "name of the supplier"
    type: "string"
    column: "supplier_name"
  - name: "product_category"
    description: "category of the product"
    type: "string"
    column: "product_category"
  dimensions:
  - name: "order_no"
    description: "unique order_no for a customer"
    type: "string"
    sql_snippet: "concat(${order_placed.entity_id},'-',split_part(${order_placed.order_id},'-',1))"
  measures:
  - name: "recency"
    description: "days since last order was placed"
    type: "min"
    sql_snippet: "day(current_date - ${order_placed.activity_ts})"
  - name: "frequency"
    description: "count of total activities"
    type: "number"
    sql_snippet: "count( distinct ${order_placed.order_no}) filter (where date(${order_placed.activity_ts})\
      \ = date('{{date:2022-07-05}}'))"
  - name: "avg_order_value"
    type: "number"
    sql_snippet: "${order_placed.monetary_for_day}/ cast(${order_placed.frequency}\
      \ as double)"
- name: "order_rejected"
  sql:
    query: "SELECT \n  activity_uuid, \n  entity_id,\n  trim(feature1) as ref_order_id,\n\
      \  activity_ts,\n  trim(feature2) as product_id,\n  trim(feature3) as order_reject_code,\n\
      \  trim(feature4) as order_status_code,\n  trim(feature5) as order_delivery_status,\n\
      \  cast(feature9 as double) as order_value,\n  feature10 as request_delivery_date,\nFROM icebase.audience.activity_streams_large_data\
      \  where activity = 'order_rejected'\n"
    columns:
    - name: "activity_uuid"
    - name: "entity_id"
    - name: "ref_order_id"
    - name: "activity_ts"
    - name: "product_id"
    - name: "order_reject_code"
    - name: "order_status_code"
    - name: "order_delivery_status"
    - name: "order_value"
    - name: "request_delivery_date"
    tables:
    - "icebase.audience.activity_streams_large_data"
    lenses: []
  fields:
  - name: "activity_uuid"
    description: "unique identifier of the activity event"
    type: "string"
    column: "activity_uuid"
    primary: true
  - name: "entity_id"
    description: "customer identifier"
    type: "string"
    column: "entity_id"
  - name: "ref_order_id"
    description: "order identifier"
    type: "string"
    column: "ref_order_id"
  - name: "activity_ts"
    description: "timestamp of the moment when activity_occured"
    type: "date"
    column: "activity_ts"
  - name: "product_id"
    description: "product identifier"
    type: "string"
    column: "product_id"
  - name: "order_value"
    description: "value of the order placed"
    type: "number"
    column: "order_value"
  - name: "request_delivery_date"
    description: "requested delivery date"
    type: "date"
    column: "request_delivery_date"
  - name: "order_reject_code"
    description: "code for rejection"
    type: "string"
    column: "order_reject_code"
  - name: "order_status_code"
    description: "code for order status"
    type: "string"
    column: "order_status_code"
  - name: "order_delivery_status"
    description: "status of order delivery"
    type: "string"
    column: "order_delivery_status"
  dimensions:
  - name: "order_no"
    description: "unique order_no for a customer"
    type: "string"
    sql_snippet: "concat(${order_rejected.entity_id},'-',split_part(${order_rejected.ref_order_id},'-',1))"
  measures:
  - name: "frequency"
    description: "count of total activities"
    type: "number"
    sql_snippet: "count( distinct ${order_rejected.order_no}) filter (where date(${order_rejected.activity_ts})\
      \ = date('{{date2:2022-07-25}}'))"
  - name: "avg_order_value"
    type: "number"
    sql_snippet: "${order_rejected.monetary_for_day}/ cast(${order_rejected.frequency}\
      \ as double)"
- name: "order_invoiced"
  sql:
    query: "SELECT \n  activity_uuid, \n  entity_id,\n  trim(feature1) as ref_order_id,\n\
      \  activity_ts,\n  trim(feature2) as product_id,\n\
      \  trim(feature4) as supplier_name,\n  trim(feature5) as product_category,\n  cast(feature9 as double) as order_value,\n   \  feature10 as request_delivery_date,\n\
      \  FROM icebase.audience.activity_streams_large_data \
      \ where activity = 'order_invoiced'\n"
    columns:
    - name: "activity_uuid"
    - name: "entity_id"
    - name: "ref_order_id"
    - name: "activity_ts"
    - name: "product_id"
    - name: "supplier_name"
    - name: "product_category"
    - name: "order_value"
    - name: "request_delivery_date"
    tables:
    - "icebase.audience.activity_streams_large_data"
  fields:
  - name: "activity_uuid"
    description: "unique identifier of the activity event"
    type: "string"
    column: "activity_uuid"
    primary: true
  - name: "entity_id"
    description: "customer identifier"
    type: "string"
    column: "entity_id"
  - name: "ref_order_id"
    description: "order identifier"
    type: "string"
    column: "ref_order_id"
  - name: "activity_ts"
    description: "timestamp of the moment when activity_occured"
    type: "date"
    column: "activity_ts"
  - name: "product_id"
    description: "product identifier"
    type: "string"
    column: "product_id"
  - name: "order_value"
    description: "order value"
    type: "number"
    column: "order_value"
  measures:
  - name: "frequency"
    description: "count of total activities"
    type: "number"
    sql_snippet: "count( distinct ${order_invoiced.ref_order_id}) filter (where date(${order_invoiced.activity_ts})\
      \ = date('{{date3:2022-07-11}}'))"
  - name: "avg_order_value"
    type: "number"
    sql_snippet: "${order_invoiced.monetary_for_day}/ cast(${order_invoiced.frequency}\
      \ as double)"
    hidden: false
    depends:
    - "frequency" 